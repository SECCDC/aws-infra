# MIT License

# Copyright (c) 2020-2021 Chris Farris (https://www.chrisfarris.com)

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a Windows Instance and join it to AD

Parameters:

  pCorporateStack:
    Description: Name of the main VPC Cloudformation Stack
    Type: String
    Default: Corporate-VPC

  pDirectoryName:
    Description: Name of the AD to Join to
    Type: String

  pSimpleAD:
    Description: Identifier for the AD Instance
    Type: String

  pFirstADIp:
    Description: First IP for the SimpleAD
    Type: String

  pSecondADIp:
    Description: Second IP for the SimpleAD
    Type: String

  pHostedZoneId:
    Description: Hosted Zone ID to register the public instance into
    Type: AWS::Route53::HostedZone::Id

  pWindowsAMI:
    Description: Base AMI for the instances
    Type: AWS::EC2::Image::Id

  pKeyName:
    Description: KeyName for instances
    Type: AWS::EC2::KeyPair::KeyName

  pWinAwsCliUrl:
    Description: URL for the Windows CLI
    Type: String

  pSubnet:
    Description: Subnet for instance
    Type: String
    AllowedValues:
      - "PublicSubnetA"
      - "PublicSubnetB"
      - "ServerSubnet"
      - "WorkspacesSubnetA"
      - "WorkspacesSubnetB"
    Default: "PublicSubnetA"

  pFQDN:
    Description: Fully Qualified Domain Name for this host (gets registered in Route53)
    Type: String

  pVpcCidr:
    Description: Allow RDP from these IP Addresses
    Type: String

  pInstanceType:
    Description: Size of the Windows Instance
    Type: String
    AllowedValues: [t2.micro, t2.small, t2.medium]
    Default: t2.micro




Resources:

  WindowsInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref 'pKeyName'
      DisableApiTermination: 'false'
      ImageId: !Ref 'pWindowsAMI'
      InstanceType: !Ref 'pInstanceType'
      SubnetId:
        Fn::ImportValue: !Sub "${pCorporateStack}-${pSubnet}"
      Monitoring: 'false'
      IamInstanceProfile: !Ref 'IamInstanceProfile'
      SsmAssociations:
        - DocumentName: !Ref 'SSMDocument'
          AssociationParameters:
            - Key: directoryId
              Value:
                - !Ref 'pSimpleAD'
            - Key: directoryName
              Value:
                - !Ref 'pDirectoryName'
            - Key: dnsIpAddresses
              Value:
                - !Ref 'pFirstADIp'
                - !Ref 'pSecondADIp'
            - Key: AwsCliSource
              Value:
                - !Ref 'pWinAwsCliUrl'
      SecurityGroupIds:
        - !Ref 'WindowsInstanceSecurityGroup'


  WindowsInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Generated by the ${AWS::StackName}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref 'pVpcCidr'
      VpcId:
        Fn::ImportValue: !Sub "${pCorporateStack}-VpcId"

  SSMDocument:
    Type: AWS::SSM::Document
    Properties:
      Content:
        schemaVersion: '1.2'
        description: Join instances to an AWS Directory Service domain.
        parameters:
          directoryId:
            type: String
            description: (Required) The ID of the AWS Directory Service directory.
          directoryName:
            type: String
            description: (Required) The name of the directory; for example, test.example.com
          AwsCliSource:
            type: String
            description: (Required) Url of the AWS Cli package to install
          dnsIpAddresses:
            type: StringList
            default: []
            description: >-
              (Optional) The IP addresses of the DNS servers in the directory. Required
              when DHCP is not configured. Learn more at http://docs.aws.amazon.com/directoryservice/latest/simple-ad/join_get_dns_addresses.html
            allowedPattern: ((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
        runtimeConfig:
          aws:applications:
            properties:
              - id: '0.aws:applications'
                action: Install
                parameters: ''
                source: '{{ AwsCliSource }}'
                sourceHash: ''
          aws:domainJoin:
            properties:
              directoryId: '{{ directoryId }}'
              directoryName: '{{ directoryName }}'
              dnsIpAddresses: '{{ dnsIpAddresses }}'

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'IamInstanceRole'

  IamInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName: SSM
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: SSM
                Effect: Allow
                Action:
                  - ssm:ListAssociations
                Resource:
                  - '*'
        - PolicyName: AllowCloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents',
                'logs:DescribeLogStreams']
              Resource: ['arn:aws:logs:*:*:*']

  PrivateRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Fn::ImportValue:
          !Sub "${pCorporateStack}-PrivateZoneId"
      Name: !Ref pFQDN
      ResourceRecords:
        - !GetAtt WindowsInstance.PrivateIp
      TTL: 60
      Type: A

Outputs:
  WindowsInstanceIP:
    Description: Ip Addresse of the Windows Instance
    Value: !GetAtt 'WindowsInstance.PrivateIp'
  InstanceID:
    Value: !Ref 'WindowsInstance'
  SsmDocument:
    Value: !Ref 'SSMDocument'
