# MIT License

# Copyright (c) 2020-2021 Chris Farris (https://www.chrisfarris.com)

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy CloudTrail for SECCDC
Parameters:

  SECCDCLogBucketName:
    Description: Name of the Bucket in the SECCDC account where logs are written.
    Type: String
    Default: INSERT YOUR S3 BUCKET HERE

  SendEventsToCloudWatchLogs:
    Description: If true, CloudTrail Events will be sent to CloudWatch Logs for local searching
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  CloudTrailLogGroupName:
    Description: LogGroup in CloudWatch logs to get the CloudTrail events
    Type: String
    Default: "CloudTrail/DefaultLogGroup"

  CloudTrailLogGroupRetention:
    Description: How long in days to retain events in CloudWatch Logs
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  ContactEmail:
    Description: If specified, this email address gets user login notifications
    Type: String
    Default: "none"

  CreateBucket:
    Type: String
    Description: Boolean to create bucket or use existing one
    AllowedValues:
      - "true"
      - "false"
    Default: "false"


Conditions:
  CloudWatchLogs: !Equals [ !Ref SendEventsToCloudWatchLogs, "true" ]
  ContactSubscription: !Not [ !Equals [ !Ref ContactEmail, "none" ] ]
  CreateBucket: !Equals [!Ref 'CreateBucket', 'true']


Resources:


  LoggingS3Bucket:
    DeletionPolicy: Retain
    Condition: CreateBucket
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Ref 'SECCDCLogBucketName'
      VersioningConfiguration:
        Status: Enabled
      Tags:
      - Key: Name
        Value: !Ref 'SECCDCLogBucketName'

  LoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'SECCDCLogBucketName'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource: !Join ['', ['arn:aws:s3:::', !Ref 'SECCDCLogBucketName']]
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource: !Join ['', ['arn:aws:s3:::', !Ref 'SECCDCLogBucketName', /AWSLogs, /*]]
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control

  # And Define the CloudTrail. Make it Global and for all regions
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn: SECCDCCloudTrailTopicPolicy
    Properties:
      TrailName: "SECCDC-CloudTrail"
      S3BucketName: !Ref 'SECCDCLogBucketName'
      IsLogging: true
      SnsTopicName: !GetAtt SECCDCCloudTrailTopic.TopicName
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      # These are only applied if the CloudWatch Logs is set to true
      CloudWatchLogsRoleArn: !If [ CloudWatchLogs, !GetAtt CloudTrailToCloudWatchLogsRole.Arn, !Ref "AWS::NoValue" ]
      CloudWatchLogsLogGroupArn: !If [ CloudWatchLogs, !GetAtt CloudTrailLogGroup.Arn, !Ref "AWS::NoValue" ]
      IsMultiRegionTrail: true
      Tags:
      - Key: Name
        Value: !Ref 'AWS::StackName'

  SECCDCCloudTrailTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: CloudTrail Notification Topic

  SECCDCCloudTrailTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics: [!Ref 'SECCDCCloudTrailTopic']
      PolicyDocument:
        Version: '2008-10-17'
        Id: '__default_policy_ID'
        Statement:
        - Sid: __default_statement_ID
          Effect: Allow
          Principal:
            AWS: '*'
          Resource: "*"
          Action:
            - sns:GetTopicAttributes
            - sns:SetTopicAttributes
            - sns:AddPermission
            - sns:RemovePermission
            - sns:DeleteTopic
            - sns:Subscribe
            - sns:ListSubscriptionsByTopic
            - sns:Publish
            - sns:Receive
          Condition:
            StringEquals:
              AWS:SourceOwner: !Sub '${AWS::AccountId}'
        - Sid: AWSCloudTrailSNSPolicy
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Resource: '*'
          Action: sns:Publish


  # Define a Log Group to Send the Cloudtrail Events to CloudWatch Logs
  CloudTrailToCloudWatchLogsRole:
    Type: "AWS::IAM::Role"
    Condition: CloudWatchLogs
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudtrail.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: SendtoCloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: AWSCloudTrailCreateLogStream2014110
              Effect: Allow
              Action: logs:CreateLogStream
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudTrailLogGroupName}:log-stream:*
            - Sid: AWSCloudTrailPutLogEvents20141101
              Effect: Allow
              Action: logs:PutLogEvents
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudTrailLogGroupName}:log-stream:*

  CloudTrailLogGroup:
    Type: "AWS::Logs::LogGroup"
    Condition: CloudWatchLogs
    Properties:
      LogGroupName: !Ref CloudTrailLogGroupName
      RetentionInDays: !Ref CloudTrailLogGroupRetention

  SECCDCAdminRoleUsageMetricFilter:
    Type: AWS::Logs::MetricFilter
    Condition: CloudWatchLogs
    Properties:
      LogGroupName: !Ref CloudTrailLogGroup
      FilterPattern: !Sub '{ $.userIdentity.arn = "arn:aws:iam::${AWS::AccountId}:user/*" }'
      MetricTransformations:
      - MetricNamespace: CloudTrailMetrics
        MetricName: SECCDCLogin
        MetricValue: '1'

  SECCDCAdminRoleUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CloudWatchLogs
    Properties:
      AlarmName: SECCDCAdminRoleUsageAlarm
      AlarmDescription: Alarms when the SECCDC Account is logged into.
      AlarmActions:
        - !Ref LoginNotificationTopic
      MetricName: SECCDCLogin
      Namespace: CloudTrailMetrics
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: '1'
      Period: '300'
      Statistic: Sum
      Threshold: '1'
      TreatMissingData: notBreaching


  LoginNotificationTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "${AWS::StackName}-Login-Notfication"
      DisplayName: "Login Alerts are published here"

  ContactSubscription:
    Type: AWS::SNS::Subscription
    Condition: ContactSubscription
    Properties:
      Endpoint: !Ref ContactEmail
      Protocol: email
      TopicArn: !Ref 'LoginNotificationTopic'


  #
  # Config Service
  #
  ConfigTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "${AWS::StackName}-${AWS::Region}"
      DisplayName: !Sub "${AWS::StackName}-${AWS::Region}"

  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: [config.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: '/'
      ManagedPolicyArns:
        # Managed Policy to Allow Config to read what it needs to read
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      Policies:
      - PolicyName: ConfigPolicyToPublish
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: ['sns:Publish']
            Resource:
            - !Ref ConfigTopic
      - PolicyName: ConfigPolicyToAccessS3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: ['s3:PutObject*']
            Resource:
            - !Join ['', ['arn:aws:s3:::', !Ref "SECCDCLogBucketName", /AWSLogs/*]]
            Condition:
              StringLike:
                s3:x-amz-acl: bucket-owner-full-control
          - Effect: Allow
            Action: ['s3:GetBucketAcl']
            Resource: !Join ['', ['arn:aws:s3:::', !Ref "SECCDCLogBucketName"]]

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: default
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN: !GetAtt [ConfigRole, Arn]
  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: One_Hour
      S3BucketName: !Ref "SECCDCLogBucketName"
      SnsTopicARN: !Ref 'ConfigTopic'

  ConfigRuleForRootMFA:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED
  ConfigRuleForCloudTrail:
    Type: AWS::Config::ConfigRule
    DependsOn: ConfigRecorder
    Properties:
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED



Outputs:
  TemplateVersion:
    Value: 2.0.0
  SECCDCCloudTrailTopicArn:
    Value: !Ref 'SECCDCCloudTrailTopic'
    Description: ARN of the SNS Topic Created
    Export:
      Name: SECCDCCloudTrailTopicArn

  SECCDCCloudTrailBucket:
    Value: !Ref 'SECCDCLogBucketName'
    Description: S3 Bucket in SECCDC account storing CloudTrail Events
    Export:
      Name: SECCDCCloudTrailS3BucketName

